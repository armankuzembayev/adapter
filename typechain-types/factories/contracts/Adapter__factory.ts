/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Adapter, AdapterInterface } from "../../contracts/Adapter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "Pair",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "addLiquidityETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "getPairBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountAMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountBMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountETHMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061305b806100206000396000f3fe6080604052600436106100a75760003560e01c8063c0e3ee6b11610064578063c0e3ee6b1461019b578063c9c65396146101c4578063ca3d6539146101ed578063d06ca61f14610216578063e6a4390514610253578063fbd5bc8014610290576100a7565b80632dd31000146100ac57806332fe7b26146100d75780636587e4ce14610102578063772157901461012b578063ad5c464814610147578063bc697eb814610172575b600080fd5b3480156100b857600080fd5b506100c16102cd565b6040516100ce9190612a89565b60405180910390f35b3480156100e357600080fd5b506100ec6102e5565b6040516100f99190612a89565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190612757565b6102fd565b005b61014560048036038101906101409190612757565b610791565b005b34801561015357600080fd5b5061015c610bb3565b6040516101699190612a89565b60405180910390f35b34801561017e57600080fd5b50610199600480360381019061019491906128f5565b610bcb565b005b3480156101a757600080fd5b506101c260048036038101906101bd9190612630565b6110ce565b005b3480156101d057600080fd5b506101eb60048036038101906101e691906125f4565b611551565b005b3480156101f957600080fd5b50610214600480360381019061020f91906126b9565b6119c2565b005b34801561022257600080fd5b5061023d60048036038101906102389190612861565b611fcb565b60405161024a9190612c9b565b60405180910390f35b34801561025f57600080fd5b5061027a600480360381019061027591906125f4565b6121ab565b6040516102879190612a89565b60405180910390f35b34801561029c57600080fd5b506102b760048036038101906102b291906125f4565b6122d8565b6040516102c49190612c9b565b60405180910390f35b735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f81565b737a250d5630b4cf539739df2c5dacb4c659f2488d81565b6103297f9d70822cafe3b9657040d72f9f439d4e2ac3df2b6da015be2c02b03d11f507a860001b612456565b6103557fd2537109b4f5773f5ec912fca519068226693d93088bdcb52cb38918f912fb2560001b612456565b6103817f959dfc90896df524f8e8eedd06b91b965757c886ddda62c2f6a45bff6743d82360001b612456565b60006103a18673c02aaa39b223fe8d0a0e5c4f27ead9083c756cc26121ab565b90506103cf7f20647aa8897f5d8f691f8c76bd751b7c89402f6cec3666d79091ca8b1064ba0660001b612456565b6103fb7f2b416d3515069dd01709fd5955c24a25ca9a2735c64874b2bcb4e34a31d46c7160001b612456565b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161043893929190612acd565b602060405180830381600087803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048a919061280f565b506104b77ff7654128cfd913783b02171325b2d11cf590dbc9987e82e5429a8f4cc4c03e8460001b612456565b6104e37f88ac250cbb89cf7db166d9421787b515f215ed97bda508ebf7d8c6882688e34360001b612456565b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d876040518363ffffffff1660e01b8152600401610532929190612bf1565b602060405180830381600087803b15801561054c57600080fd5b505af1158015610560573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610584919061280f565b506105b17f48e87bdd3ef7342959f27f7fc373b37fcf18e254cfac08b35c7f0ec97b1c398760001b612456565b6105dd7f1b15b932449fa3c2eff5261d1f4e278a28108af11efa1c4d59b0f70832b9bc6260001b612456565b60006064426105ec9190612e45565b905061061a7fb4515631c8cd553f227ceb104e6532e1832d7be4ff146f0274f2adb1baba032e60001b612456565b6106467f7f9be74a5847af6c09e2c733fe099a376a3260d0a47cf9f552a7076078f0ad5e60001b612456565b600080737a250d5630b4cf539739df2c5dacb4c659f2488d73ffffffffffffffffffffffffffffffffffffffff166302751cec8a8a8a8a8a896040518763ffffffff1660e01b81526004016106a096959493929190612c1a565b6040805180830381600087803b1580156106b957600080fd5b505af11580156106cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f191906128b9565b915091506107217fbb5ca274dcad6ef782c0416f2f91da91e37512f00e0324d2070a9ce1f2d019ea60001b612456565b61074d7fd12049cb6e72e8153a997dd8aead01aca2697902b7fcd4b165ae136b2b6b897d60001b612456565b7f9101fb4cb96b608de64eae79af26fc5fbe69904c5e3b6108204eefd9212f4770828260405161077e929190612ce8565b60405180910390a1505050505050505050565b6107bd7f86fa996798d84b7c14cb1bd87b1766a874b71e03529cf66610656078e27e545a60001b612456565b6107e97fb7ac323d6784fe8ee28ef0fbc649e2a15864ad04cbcaf935c0394d8e900186e560001b612456565b6108157f0e554491912360b6ff14f07feaf1027e4034b58f2c662bc99f4c744412d6be3d60001b612456565b8473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161085293929190612acd565b602060405180830381600087803b15801561086c57600080fd5b505af1158015610880573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a4919061280f565b506108d17f5165839bb0e4d2305127ef0ba8d3b4ba35f0e5e49a8c62613fb75f1eac26fa0b60001b612456565b6108fd7f4e496929683aa13e29f3441607caa9fe043567eb81dd4d2495b6cfb4dfa32efa60001b612456565b8473ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d866040518363ffffffff1660e01b815260040161094c929190612bf1565b602060405180830381600087803b15801561096657600080fd5b505af115801561097a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099e919061280f565b506109cb7f49cb2a9f82e9839d06bd15e63ed31a0023e8d1dce801601149f8fe6c97c5af3a60001b612456565b6109f77f2eecfc3b6786c7bcc4b857a7b122ca871c3fc622047a4c4c49472e14036a09dc60001b612456565b6000606442610a069190612e45565b9050610a347fad7981eb36ad193cc6f644f62b16427f174ede4b9d09dc49b5398c0798f903fc60001b612456565b610a607f2f851f73ec8469f42d106fd0d896519e6827c0606a26775f01375c9de1f1144c60001b612456565b6000806000737a250d5630b4cf539739df2c5dacb4c659f2488d73ffffffffffffffffffffffffffffffffffffffff1663f305d719348b8b8b8b8b8b6040518863ffffffff1660e01b8152600401610abd96959493929190612c1a565b6060604051808303818588803b158015610ad657600080fd5b505af1158015610aea573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b0f9190612975565b925092509250610b417f25cd1a392a0930077c05fd3fc9cb6f4cba653239b978ee3a9754c280ce04ddb360001b612456565b610b6d7f6d49bee6b357398c5b16c613075af5e77d03bf505b8efe1fa3c2d1b607642fe260001b612456565b7ff75993dbe1645872cbbea6395e1feebee76b435baf0e4d62d7eac269c6f57b24838383604051610ba093929190612d6d565b60405180910390a1505050505050505050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b610bf77fac169787c43135e069190c39970a73f36745d08116b6739801073dac570361b260001b612456565b610c237f2504f422e3129b810ac84d63bf06a47f1737f18332ed60e30d68ef0e6e0e6da760001b612456565b610c4f7f8574eaa61fe6217d6a9798e429b374ee9977590f301b7e387507a37888bd01c460001b612456565b82826000818110610c89577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610c9e91906125a2565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610cda93929190612acd565b602060405180830381600087803b158015610cf457600080fd5b505af1158015610d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2c919061280f565b50610d597f632f45e4337b4713462f8c2d49fd148e84204db75ff08fdcca822348b78b6bc760001b612456565b610d857ff09319ac21d1ef8c8ce42e062cc2c41d065b3becbbfc4f84c49bc7ed3591e2d760001b612456565b82826000818110610dbf577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9050602002016020810190610dd491906125a2565b73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d876040518363ffffffff1660e01b8152600401610e22929190612bf1565b602060405180830381600087803b158015610e3c57600080fd5b505af1158015610e50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e74919061280f565b50610ea17f482c24872affecb055c68c55a2bd3c4018184dc3ef13a63e7d14210e3a1ffe7160001b612456565b610ecd7f0191b1da5efcaf135e4b3850283814030c69b1d9143368ba819321685c81a0e160001b612456565b60006103e842610edd9190612e45565b9050610f0b7fb0c7204add3e0bf155a8c9868b5358a8dc7e64a8f07b8045fe40a9efb207f9bc60001b612456565b610f377f02e325d311db7044c3f3fbc2d93cefcd7b6c9165e2eb44ced569d110432deede60001b612456565b6000737a250d5630b4cf539739df2c5dacb4c659f2488d73ffffffffffffffffffffffffffffffffffffffff166338ed17398888888888886040518763ffffffff1660e01b8152600401610f9096959493929190612d11565b600060405180830381600087803b158015610faa57600080fd5b505af1158015610fbe573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610fe791906127ce565b90506110157fcb2cb2c9781a4e912d4a5ba30333f63a819de274d73a7226fc525adc9a03e98a60001b612456565b6110417ff33e5cebb0578be3981685c9c5c81b32a551d490f0973ecdc2f0937b3202cb8a60001b612456565b7f89f1d38d98c13362767fbcc2b0e375c1c3c4429b4648ea2a99839d962779b5d181600183516110719190612e9b565b815181106110a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040516110bd9190612c9b565b60405180910390a150505050505050565b6110fa7f5f39eb5c4453457af52e7f960e0c64d21ef7670ec1aaebd38531a0ca577eb15f60001b612456565b6111267f246048e9e9d7adfe661d64000a943b6a8ba51928c9056390a97f9011e266af3a60001b612456565b6111527ff3de130ca80d9921acd2a9c07b93cf13e7861f4f8624bfc28702a79910b88c7b60001b612456565b600061115e87876121ab565b905061118c7faf4f966b9bb0e32127ef42b5aef65e11cea6b158a1a0b43fb5c54af0e63e456860001b612456565b6111b87f03e0bc96edbccc6375320c56fb114ce1e6d404387d5117005dcff4dd15f669e660001b612456565b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b81526004016111f593929190612acd565b602060405180830381600087803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611247919061280f565b506112747feb5ad04efee6dee574b3e913151a519e7046bd6c9e49c470cec85334b832b09160001b612456565b6112a07fbe1d3d2b7a2468009502aae4cd55e05151170c4246858513b1c8c20dcf4be0ab60001b612456565b8073ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d876040518363ffffffff1660e01b81526004016112ef929190612bf1565b602060405180830381600087803b15801561130957600080fd5b505af115801561131d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611341919061280f565b5061136e7fcc377f2bf6c991c91b0084f96064c11b475c001307d68e4621074ca6c7e410b660001b612456565b61139a7fecb1428a17e60f9e0dec08416ff1f2c4aa2ff1a600a27ad83c2f9e59f4b3a67760001b612456565b60006064426113a99190612e45565b90506113d77fced7f2b5424e2a46901832f3fea32afb1ac67dc310a75793b9e92b1b4c49fe1460001b612456565b6114037f4e99294b497824b42d77ad1764b8d63ce8978461e85cca192c2efb9ff6396ad460001b612456565b600080737a250d5630b4cf539739df2c5dacb4c659f2488d73ffffffffffffffffffffffffffffffffffffffff1663baa2abde8b8b8b8b8b8b8a6040518863ffffffff1660e01b815260040161145f9796959493929190612b04565b6040805180830381600087803b15801561147857600080fd5b505af115801561148c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b091906128b9565b915091506114e07fc0594cd12368882cccf6ae0801d124dce033ff80e56b15282880976cd3c9d46c60001b612456565b61150c7f9461accf7a76ac071f869c751a2f58672ba678f80b322a72a5cb356a05972ea360001b612456565b7f9101fb4cb96b608de64eae79af26fc5fbe69904c5e3b6108204eefd9212f4770828260405161153d929190612ce8565b60405180910390a150505050505050505050565b61157d7f16bc5ad7d609316f980d830be49f00c57030823b2d2dfe1ed425ad243059b5bf60001b612456565b6115a97f956391aec58f8ad6c6a31256db11cfe903650ceaccc5116f2ec8099a592dc0ec60001b612456565b6115d57f75b5f7e85549558580fb1b716167e82dfac024481f9541485f1adf4d94a0c20360001b612456565b6116017fe2e70a03b53da67443ee5d3556a03e7aff686e827ce912e38a84491de019d82f60001b612456565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561166b5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6116aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a190612c7b565b60405180910390fd5b6116d67fadaf222e9e8b0f1247e4275f66d5fa717905d677783f80df76ce90fb0180880e60001b612456565b6117027f441737b751fb53d474cd2516e7383ea89b4ac0b6a8cfa3a453f731520099ef3660001b612456565b61172e7fbea33c2e50f6d35677affd07b109121c4d9aff5f5222302f2b9f4a4cb41a2f1f60001b612456565b600061173a83836121ab565b90506117687f409519d52c35034f21900870265a6d27e5736f19adf949426ee4a498c0f9221660001b612456565b6117947f904955f4b08fbb2b7d1424c13221520c37a1554392a2c0bbd4067355fe67802960001b612456565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156118f5576117f57fc8016948d81bc21ab5aea0470cd1e3199fddd47ebae4b8bf0e7820874cc377ec60001b612456565b6118217f81dbd38d5db1a21d06350d8e7a9643799c3d0be0100bf9a31891a06339bd565560001b612456565b61184d7fa578c28b7c533099184726574d2c470514a46b6fba600654ea12da7e8c645c3e60001b612456565b735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f73ffffffffffffffffffffffffffffffffffffffff1663c9c6539684846040518363ffffffff1660e01b815260040161189c929190612aa4565b602060405180830381600087803b1580156118b657600080fd5b505af11580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee91906125cb565b9050611922565b6119217f64d3ec26cad41e19493be46c8eb330fe18661eeaaef5ab7c64a9aca85428520860001b612456565b5b61194e7f5395ce786320e5f95fe49ecfec20710b964f10a83ac9740d0f0611dea26eb45f60001b612456565b61197a7f57cd3e45dc6cc0aac8ac21fc1b274cdaefad3972d877e1699be562883952449260001b612456565b8073ffffffffffffffffffffffffffffffffffffffff167f7aefd1538c7143d938f2abce5a07d8790dad961e8ea97e92d422026cecc0acdb60405160405180910390a2505050565b6119ee7fd9579aa15d266084f374dedd9064bc5d59287bfd06b9acd34dde82b09c6678f860001b612456565b611a1a7f025abd71763ba10d01c762ccbb4d93fbf9e23bbed473ac3fa4c87f11cd9f7df160001b612456565b611a467f7d344a6a2ce332194741ede708ae507ba415b3aa0273eab56f303a6f474c345d60001b612456565b8673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401611a8393929190612acd565b602060405180830381600087803b158015611a9d57600080fd5b505af1158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad5919061280f565b50611b027f8f05a514fd493c50f17510a2877ab2c153042fbcbb3e0a3714871d47f6cc20d660001b612456565b611b2e7f775835755656916f67130ca2f810d806d8ef0bcf6bb6652d1e0442c426619ef860001b612456565b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401611b6b93929190612acd565b602060405180830381600087803b158015611b8557600080fd5b505af1158015611b99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bbd919061280f565b50611bea7f36828f23d7b54d020b66c015bc6d7ad3ee0e49bde4ba6d4ddd15a2bad077020160001b612456565b611c167f72b58622ac44724c50d62d51ecf2e7df7a7e15a42a8a02fb70d4913d23f5b48c60001b612456565b8673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d876040518363ffffffff1660e01b8152600401611c65929190612bf1565b602060405180830381600087803b158015611c7f57600080fd5b505af1158015611c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb7919061280f565b50611ce47fd1ae911d938214a0bfc93ae38a03e79e52a6cb99edfcd3a2d01bf861fc5da56d60001b612456565b611d107fdebb9d49a51b4ec0be3a4c0f7572f944a09bdfe997d6fc240111b7b3519cec1560001b612456565b8573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3737a250d5630b4cf539739df2c5dacb4c659f2488d866040518363ffffffff1660e01b8152600401611d5f929190612bf1565b602060405180830381600087803b158015611d7957600080fd5b505af1158015611d8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db1919061280f565b50611dde7f7996d8c44276c2de91fdba7ec653b7ac428246d2e61b4c4be84bcd248f6c410160001b612456565b611e0a7f5863acc2a74e8bbd75d996f08a5d9cdcd489067ff57041c96302e56f234523ee60001b612456565b6000606442611e199190612e45565b9050611e477f6c5173e57bbd6c2c7261e9724c6988b6194e50c05e20f0018a5e6c1f3f0bdcb660001b612456565b611e737fdebd20479ae229b7f6340f0ae764ac70da2fc3f5a1ff53cf8502e154d6cbd62e60001b612456565b6000806000737a250d5630b4cf539739df2c5dacb4c659f2488d73ffffffffffffffffffffffffffffffffffffffff1663e8e337008c8c8c8c8c8c8c8c6040518963ffffffff1660e01b8152600401611ed3989796959493929190612b73565b606060405180830381600087803b158015611eed57600080fd5b505af1158015611f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f259190612975565b925092509250611f577f4e420a1ec54b5762295b801f27317a7b9edd95a931a66c4b204a248527c3a5ff60001b612456565b611f837f9362b6a40dba62c52bc88fc09f717ef5ba8a0c1600bffcb6b742af2b7ae611fa60001b612456565b7ff75993dbe1645872cbbea6395e1feebee76b435baf0e4d62d7eac269c6f57b24838383604051611fb693929190612d6d565b60405180910390a15050505050505050505050565b6000611ff97fd62f746b50da9471c34d951a444da6d72e4a7ed8d0df866a9e634af237df7a4160001b612456565b6120257fb292c996320143601f9e2a2721c75399e69b3db8ef058ae9a0caf2769dcf7a8460001b612456565b6120517f1158585627a51dd498923baf3533cf5592fd0eaba6887e3e3881640b3219f5b460001b612456565b6000737a250d5630b4cf539739df2c5dacb4c659f2488d73ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8686866040518463ffffffff1660e01b81526004016120a493929190612cb6565b60006040518083038186803b1580156120bc57600080fd5b505afa1580156120d0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906120f991906127ce565b90506121277ff96a15cd90b3e0225b8e0cbf9cbf44ab0b1cf5dd2c700b2c9e1428feba810b7f60001b612456565b6121537f85b733072db89ccc24b5d60dfc7246b1d9e310fa10525a7ece6cc8442e3f479d60001b612456565b80600182516121629190612e9b565b81518110612199577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519150509392505050565b60006121d97f688bfd3c13f88e0b5b389354306ae18fc1af22f251b8bc1de6c394a8957a09f860001b612456565b6122057f4a6a6bd16db1c47fb22daf0389c7ea63b0d4ef06293e1efa46fb39a394bb8aa660001b612456565b6122317f22738ef666fef6901ed43c158d94fef89d1231a17b54e96237f55a38d04987ce60001b612456565b735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f73ffffffffffffffffffffffffffffffffffffffff1663e6a4390584846040518363ffffffff1660e01b8152600401612280929190612aa4565b60206040518083038186803b15801561229857600080fd5b505afa1580156122ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d091906125cb565b905092915050565b60006123067f3632d1036dee974e8574199fd226987a2026bd5aca27aaf85a92ceb34550a8a660001b612456565b6123327f8348caea035026624d399c87dfe103b76e7b42fd309d846a00b085aeb39203ef60001b612456565b61235e7fd97ce6c6e19c2a08fc08fc6bcf5ea3a2afc8c70a9fc04d5d31033b154ec34db260001b612456565b600061236a84846121ab565b90506123987f119f5e62b3beab5874b07c61f360ec885788d70963f5c2bc93eebe217a0db5fe60001b612456565b6123c47f917a42e4ca5d6c2409d4151bf063d0a5bb8455dc79173c9df23b7a1cddf3034460001b612456565b8073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016123fd9190612a89565b60206040518083038186803b15801561241557600080fd5b505afa158015612429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244d9190612838565b91505092915050565b50565b600061246c61246784612dc9565b612da4565b9050808382526020820190508285602086028201111561248b57600080fd5b60005b858110156124bb57816124a1888261258d565b84526020840193506020830192505060018101905061248e565b5050509392505050565b6000813590506124d481612fe0565b92915050565b6000815190506124e981612fe0565b92915050565b60008083601f84011261250157600080fd5b8235905067ffffffffffffffff81111561251a57600080fd5b60208301915083602082028301111561253257600080fd5b9250929050565b600082601f83011261254a57600080fd5b815161255a848260208601612459565b91505092915050565b60008151905061257281612ff7565b92915050565b6000813590506125878161300e565b92915050565b60008151905061259c8161300e565b92915050565b6000602082840312156125b457600080fd5b60006125c2848285016124c5565b91505092915050565b6000602082840312156125dd57600080fd5b60006125eb848285016124da565b91505092915050565b6000806040838503121561260757600080fd5b6000612615858286016124c5565b9250506020612626858286016124c5565b9150509250929050565b60008060008060008060c0878903121561264957600080fd5b600061265789828a016124c5565b965050602061266889828a016124c5565b955050604061267989828a01612578565b945050606061268a89828a01612578565b935050608061269b89828a01612578565b92505060a06126ac89828a016124c5565b9150509295509295509295565b600080600080600080600060e0888a0312156126d457600080fd5b60006126e28a828b016124c5565b97505060206126f38a828b016124c5565b96505060406127048a828b01612578565b95505060606127158a828b01612578565b94505060806127268a828b01612578565b93505060a06127378a828b01612578565b92505060c06127488a828b016124c5565b91505092959891949750929550565b600080600080600060a0868803121561276f57600080fd5b600061277d888289016124c5565b955050602061278e88828901612578565b945050604061279f88828901612578565b93505060606127b088828901612578565b92505060806127c1888289016124c5565b9150509295509295909350565b6000602082840312156127e057600080fd5b600082015167ffffffffffffffff8111156127fa57600080fd5b61280684828501612539565b91505092915050565b60006020828403121561282157600080fd5b600061282f84828501612563565b91505092915050565b60006020828403121561284a57600080fd5b60006128588482850161258d565b91505092915050565b60008060006040848603121561287657600080fd5b600061288486828701612578565b935050602084013567ffffffffffffffff8111156128a157600080fd5b6128ad868287016124ef565b92509250509250925092565b600080604083850312156128cc57600080fd5b60006128da8582860161258d565b92505060206128eb8582860161258d565b9150509250929050565b60008060008060006080868803121561290d57600080fd5b600061291b88828901612578565b955050602061292c88828901612578565b945050604086013567ffffffffffffffff81111561294957600080fd5b612955888289016124ef565b93509350506060612968888289016124c5565b9150509295509295909350565b60008060006060848603121561298a57600080fd5b60006129988682870161258d565b93505060206129a98682870161258d565b92505060406129ba8682870161258d565b9150509250925092565b60006129d083836129dc565b60208301905092915050565b6129e581612ecf565b82525050565b6129f481612ecf565b82525050565b6000612a068385612e0c565b9350612a1182612df5565b8060005b85811015612a4a57612a278284612e2e565b612a3188826129c4565b9750612a3c83612dff565b925050600181019050612a15565b5085925050509392505050565b6000612a64601583612e1d565b9150612a6f82612fb7565b602082019050919050565b612a8381612f0d565b82525050565b6000602082019050612a9e60008301846129eb565b92915050565b6000604082019050612ab960008301856129eb565b612ac660208301846129eb565b9392505050565b6000606082019050612ae260008301866129eb565b612aef60208301856129eb565b612afc6040830184612a7a565b949350505050565b600060e082019050612b19600083018a6129eb565b612b2660208301896129eb565b612b336040830188612a7a565b612b406060830187612a7a565b612b4d6080830186612a7a565b612b5a60a08301856129eb565b612b6760c0830184612a7a565b98975050505050505050565b600061010082019050612b89600083018b6129eb565b612b96602083018a6129eb565b612ba36040830189612a7a565b612bb06060830188612a7a565b612bbd6080830187612a7a565b612bca60a0830186612a7a565b612bd760c08301856129eb565b612be460e0830184612a7a565b9998505050505050505050565b6000604082019050612c0660008301856129eb565b612c136020830184612a7a565b9392505050565b600060c082019050612c2f60008301896129eb565b612c3c6020830188612a7a565b612c496040830187612a7a565b612c566060830186612a7a565b612c6360808301856129eb565b612c7060a0830184612a7a565b979650505050505050565b60006020820190508181036000830152612c9481612a57565b9050919050565b6000602082019050612cb06000830184612a7a565b92915050565b6000604082019050612ccb6000830186612a7a565b8181036020830152612cde8184866129fa565b9050949350505050565b6000604082019050612cfd6000830185612a7a565b612d0a6020830184612a7a565b9392505050565b600060a082019050612d266000830189612a7a565b612d336020830188612a7a565b8181036040830152612d468186886129fa565b9050612d5560608301856129eb565b612d626080830184612a7a565b979650505050505050565b6000606082019050612d826000830186612a7a565b612d8f6020830185612a7a565b612d9c6040830184612a7a565b949350505050565b6000612dae612dbf565b9050612dba8282612f17565b919050565b6000604051905090565b600067ffffffffffffffff821115612de457612de3612f77565b5b602082029050602081019050919050565b6000819050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612e3d60208401846124c5565b905092915050565b6000612e5082612f0d565b9150612e5b83612f0d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612e9057612e8f612f48565b5b828201905092915050565b6000612ea682612f0d565b9150612eb183612f0d565b925082821015612ec457612ec3612f48565b5b828203905092915050565b6000612eda82612eed565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b612f2082612fa6565b810181811067ffffffffffffffff82111715612f3f57612f3e612f77565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f5a65726f20616464726573732070726f76696465640000000000000000000000600082015250565b612fe981612ecf565b8114612ff457600080fd5b50565b61300081612ee1565b811461300b57600080fd5b50565b61301781612f0d565b811461302257600080fd5b5056fea264697066735822122033492c141973d4385c11dc6433a966acaa465f13736d6e7d6efda8980931490964736f6c63430008040033";

type AdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Adapter__factory extends ContractFactory {
  constructor(...args: AdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Adapter> {
    return super.deploy(overrides || {}) as Promise<Adapter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Adapter {
    return super.attach(address) as Adapter;
  }
  override connect(signer: Signer): Adapter__factory {
    return super.connect(signer) as Adapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdapterInterface {
    return new utils.Interface(_abi) as AdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Adapter {
    return new Contract(address, _abi, signerOrProvider) as Adapter;
  }
}
